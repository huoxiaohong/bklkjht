<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bklkj.dao.UserMapper">
	<resultMap id="BaseResultMap" type="com.bklkj.pojo.User">
		<id column="Id" property="id" jdbcType="INTEGER" />
		<result column="UserId" property="userid" jdbcType="VARCHAR" />
		<result column="UserPhone" property="userphone" jdbcType="VARCHAR" />
		<result column="UserName" property="username" jdbcType="VARCHAR" />
		<result column="UserNickname" property="usernickname" jdbcType="VARCHAR" />
		<result column="UserPassword" property="userpassword" jdbcType="VARCHAR" />
		<result column="UserIntegral" property="userintegral" jdbcType="VARCHAR" />
		<result column="UserBalance" property="userbalance" jdbcType="DOUBLE" />
		<result column="UserAlipayId" property="useralipayid" jdbcType="INTEGER" />
		<result column="UserPicture" property="userpicture" jdbcType="VARCHAR" />
		<result column="UserGold" property="usergold" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		Id, UserId, UserPhone, UserName, UserNickname,
		UserPassword,
		UserIntegral, UserBalance,
		UserAlipayId, UserPicture,
		UserGold
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.bklkj.pojo.UserExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where Id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where Id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.bklkj.pojo.UserExample">
		delete from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<!-- ******************************************************************** -->
	<insert id="insert" parameterType="com.bklkj.pojo.User">
		insert into user (
		UserName,
		UserNickname,
		UserIntegral, UserBalance, UserAlipayId,
		UserPicture,
		UserGold)
		values (
		#{username,jdbcType=VARCHAR},
		#{usernickname,jdbcType=VARCHAR},
		#{userintegral,jdbcType=VARCHAR},
		#{userbalance,jdbcType=DOUBLE}, #{useralipayid,jdbcType=INTEGER},
		#{userpicture,jdbcType=VARCHAR}, #{usergold,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.bklkj.pojo.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				Id,
			</if>
			<if test="userid != null">
				UserId,
			</if>
			<if test="userphone != null">
				UserPhone,
			</if>
			<if test="username != null">
				UserName,
			</if>
			<if test="usernickname != null">
				UserNickname,
			</if>
			<if test="userpassword != null">
				UserPassword,
			</if>
			<if test="userintegral != null">
				UserIntegral,
			</if>
			<if test="userbalance != null">
				UserBalance,
			</if>
			<if test="useralipayid != null">
				UserAlipayId,
			</if>
			<if test="userpicture != null">
				UserPicture,
			</if>
			<if test="usergold != null">
				UserGold,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userid != null">
				#{userid,jdbcType=VARCHAR},
			</if>
			<if test="userphone != null">
				#{userphone,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="usernickname != null">
				#{usernickname,jdbcType=VARCHAR},
			</if>
			<if test="userpassword != null">
				#{userpassword,jdbcType=VARCHAR},
			</if>
			<if test="userintegral != null">
				#{userintegral,jdbcType=VARCHAR},
			</if>
			<if test="userbalance != null">
				#{userbalance,jdbcType=DOUBLE},
			</if>
			<if test="useralipayid != null">
				#{useralipayid,jdbcType=INTEGER},
			</if>
			<if test="userpicture != null">
				#{userpicture,jdbcType=VARCHAR},
			</if>
			<if test="usergold != null">
				#{usergold,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.bklkj.pojo.UserExample"
		resultType="java.lang.Integer">
		select count(*) from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user
		<set>
			<if test="record.id != null">
				Id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.userid != null">
				UserId = #{record.userid,jdbcType=INTEGER},
			</if>
			<if test="record.userphone != null">
				UserPhone = #{record.userphone,jdbcType=VARCHAR},
			</if>
			<if test="record.username != null">
				UserName = #{record.username,jdbcType=VARCHAR},
			</if>
			<if test="record.usernickname != null">
				UserNickname = #{record.usernickname,jdbcType=VARCHAR},
			</if>
			<if test="record.userpassword != null">
				UserPassword = #{record.userpassword,jdbcType=VARCHAR},
			</if>
			<if test="record.userintegral != null">
				UserIntegral = #{record.userintegral,jdbcType=VARCHAR},
			</if>
			<if test="record.userbalance != null">
				UserBalance = #{record.userbalance,jdbcType=DOUBLE},
			</if>
			<if test="record.useralipayid != null">
				UserAlipayId = #{record.useralipayid,jdbcType=INTEGER},
			</if>
			<if test="record.userpicture != null">
				UserPicture = #{record.userpicture,jdbcType=VARCHAR},
			</if>
			<if test="record.usergold != null">
				UserGold = #{record.usergold,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user
		set Id = #{record.id,jdbcType=INTEGER},
		UserId =
		#{record.userid,jdbcType=INTEGER},
		UserPhone =
		#{record.userphone,jdbcType=VARCHAR},
		UserName =
		#{record.username,jdbcType=VARCHAR},
		UserNickname =
		#{record.usernickname,jdbcType=VARCHAR},
		UserPassword =
		#{record.userpassword,jdbcType=VARCHAR},
		UserIntegral =
		#{record.userintegral,jdbcType=VARCHAR},
		UserBalance =
		#{record.userbalance,jdbcType=DOUBLE},
		UserAlipayId =
		#{record.useralipayid,jdbcType=INTEGER},
		UserPicture =
		#{record.userpicture,jdbcType=VARCHAR},
		UserGold =
		#{record.usergold,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.bklkj.pojo.User">
		update user
		<set>
			<if test="userid != null">
				UserId = #{userid,jdbcType=VARCHAR},
			</if>
			<if test="userphone != null">
				UserPhone = #{userphone,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				UserName = #{username,jdbcType=VARCHAR},
			</if>
			<if test="usernickname != null">
				UserNickname = #{usernickname,jdbcType=VARCHAR},
			</if>
			<if test="userpassword != null">
				UserPassword = #{userpassword,jdbcType=VARCHAR},
			</if>
			<if test="userintegral != null">
				UserIntegral = #{userintegral,jdbcType=VARCHAR},
			</if>
			<if test="userbalance != null">
				UserBalance = #{userbalance,jdbcType=DOUBLE},
			</if>
			<if test="useralipayid != null">
				UserAlipayId = #{useralipayid,jdbcType=INTEGER},
			</if>
			<if test="userpicture != null">
				UserPicture = #{userpicture,jdbcType=VARCHAR},
			</if>
			<if test="usergold != null">
				UserGold = #{usergold,jdbcType=INTEGER},
			</if>
		</set>
		where Id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.bklkj.pojo.User">
		update user
		set
		UserId = #{userid,jdbcType=VARCHAR},
		UserPhone =
		#{userphone,jdbcType=VARCHAR},
		UserName = #{username,jdbcType=VARCHAR},
		UserNickname = #{usernickname,jdbcType=VARCHAR},
		UserPassword =
		#{userpassword,jdbcType=VARCHAR},
		UserIntegral =
		#{userintegral,jdbcType=VARCHAR},
		UserBalance =
		#{userbalance,jdbcType=DOUBLE},
		UserAlipayId =
		#{useralipayid,jdbcType=INTEGER},
		UserPicture =
		#{userpicture,jdbcType=VARCHAR},
		UserGold =
		#{usergold,jdbcType=INTEGER}
		where Id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectByMoney" parameterType="com.bklkj.pojo.User"
		resultType="java.lang.Integer">
		select sum(redbagmoney) from redbag where
		redbag.userid=#{userid,jdbcType=VARCHAR}
	</select>

	<insert id="insertPhone" parameterType="com.bklkj.pojo.User">
		insert into user (Id,
		UserId, UserPhone，UserPassword)
		values (#{id,jdbcType=INTEGER},
		#{userid,jdbcType=VARCHAR},
		#{userphone,jdbcType=VARCHAR},#{userpassword,jdbcType=VARCHAR})
	</insert>

	<update id="updateUserIntegral" parameterType="com.bklkj.pojo.User">
		update
		user,(select
		integralrecharge.RechargeAmount,out_trade_no,integralrecharge.UserId
		from alipay,integralrecharge where
		alipay.out_trade_no=integralrecharge.UserId)s
		SET
		`user`.UserIntegral=`user`.UserIntegral+'#{userintegralnum,jdbcType=VARCHAR}'
		where s.UserId = #{userid,jdbcType=VARCHAR} and
		s.RechargeAmount=#{rechargeamount,jdbcType=DOUBLE};
	</update>

	<update id="updateUserUseIntegal2" parameterType="com.bklkj.pojo.User">
		UPDATE user SET
		UserIntegral =
		UserIntegral-'#{userintegralnum,jdbcType=VARCHAR}' where
		UserId =
		#{userid,jdbcType=VARCHAR};
	</update>

	<update id="updateUserGold" parameterType="com.bklkj.pojo.User">
		update user SET
		UserGold = (select sum(goldNum)from gold) where
		`user`.UserId =
		#{userid,jdbcType=VARCHAR}
	</update>

	<select id="selectUserGold" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select usergold from user where UserId =
		#{userid,jdbcType=VARCHAR}
	</select>

	<update id="updateUserGoldSub" parameterType="com.bklkj.pojo.User">
		update user SET
		UserGold = UserGold - 100 where UserId =
		#{userid,jdbcType=VARCHAR}
	</update>

	<!-- 查询用户积分 -->
	<select id="selectUserIntegral" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select userIntegral from user where UserId =
		#{userid,jdbcType=VARCHAR}
	</select>

	<!-- 更改用户积分（活动获得） -->
	<update id="updateUserIntegralA" parameterType="com.bklkj.pojo.User">
		update user SET
		UserIntegral = UserIntegral +
		#{userintegralA,jdbcType=VARCHAR} where
		UserId =
		#{userid,jdbcType=VARCHAR}
	</update>

	<!-- 更新用户总积分 -->
	<update id="updateUserIntegralSum" parameterType="com.bklkj.pojo.User">
		update user set
		UserIntegral=(select SUM(integral) from
		redbag)+(select SUM(integral)
		from integralrecharge)
		where UserId = #{userid,jdbcType=VARCHAR}
	</update>

	<select id="selectByAll" parameterType="com.bklkj.pojo.User"
		resultMap="BaseResultMap">
		select * from user limit 0,20
	</select>

	<select id="selectByPhone" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select * from user where
		userPhone=#{userphone,jdbcType=VARCHAR}
	</select>

	<select id="selectByName" parameterType="com.bklkj.pojo.User"
		resultMap="BaseResultMap">
		select * from user where username =
		#{username,jdbcType=VARCHAR}
	</select>
	<!-- ***************************************************** -->
	<insert id="insertt" parameterType="java.lang.String">
		insert into user
		(userid,userPhone,userPassword) values
		(CONCAT((select DATE_FORMAT( NOW(), "%Y%m%d%k%i%s")),#{userphone,jdbcType=VARCHAR}),#{userphone,jdbcType=VARCHAR},
		#{userpassword,jdbcType=VARCHAR})
	</insert>
	<!-- 登录查询 -->
	<select id="selectByPP" resultMap="BaseResultMap" parameterType="java.lang.String">
		select * from user where UserPhone=#{userphone,jdbcType=VARCHAR} AND
		UserPassword=#{userpassword,jdbcType=VARCHAR}
	</select>
	<!-- 用户更改密码 -->
	<update id="updateByPhone" parameterType="com.bklkj.pojo.User">
		update user set
		UserPassword = #{userpassword,jdbcType=VARCHAR} where
		UserId=#{userid,jdbcType=VARCHAR}
	</update>
	<!-- 显示用户金币，积分，余额 -->
	<select id="showUser" parameterType="com.bklkj.pojo.User"
		resultMap="BaseResultMap">
		select usergold,userintegral,userbalance,userphone from user
		where
		UserId=#{userid,jdbcType=VARCHAR}
	</select>

	<!-- 查找用户登录方式 -->
	<select id="selectLoginWay" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select loginway from user where
		UserId=#{userid,jdbcType=VARCHAR}
	</select>

	<!-- see-->
	<select id="selectByUserId" parameterType="com.bklkj.pojo.User"
		resultMap="BaseResultMap">
		select usergold,UserId,UserIntegral,UserBalance from (select IFNULL(SUM(goldnum),0) from gold where userid=#{userid,jdbcType=VARCHAR})gg,user where userid=#{userid,jdbcType=VARCHAR}
	</select>
	
	<!-- 扫码 -->
	<select id="selectByUserI" parameterType="com.bklkj.pojo.User"
		resultMap="BaseResultMap">
		select judge from user where userid=#{userid,jdbcType=VARCHAR}
	</select>
	
	
	<select id="selectByotherloginuserid" resultMap="BaseResultMap" parameterType="java.lang.String">
		select * from user where UserId=#{userid,jdbcType=VARCHAR}
	</select>

	<select id="selectState" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select state from user where
		UserId=#{userid,jdbcType=VARCHAR}
	</select>

	<update id="updateUserUseIntegal" parameterType="com.bklkj.pojo.User">
		update user set
		UserIntegral = userintegral - 10 where UserId =
		#{userid,jdbcType=VARCHAR}
	</update>
	
	<update id="updateotherlogin" parameterType="com.bklkj.pojo.User">
		update user set
		usernickname = #{usernickname,jdbcType=VARCHAR},userpicture =#{userpicture,jdbcType=VARCHAR} where UserId =
		#{userid,jdbcType=VARCHAR}
	</update>


	<update id="updateJudge" parameterType="com.bklkj.pojo.User">
		update user set judge = 1
		where UserId = #{userid,jdbcType=VARCHAR}
	</update>

	<!-- 查询userid -->
	<select id="selectUserUserid" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select userid from user where
		userphone=#{userphone,jdbcType=VARCHAR}
	</select>

	<!-- 查找手机用户登录方式 -->
	<select id="selectLoginWayPhone" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select loginway from user where
		userPhone=#{userphone,jdbcType=VARCHAR}
	</select>

	<select id="selectStatePhone" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select state from user where
		userPhone=#{userphone,jdbcType=VARCHAR}
	</select>

	<update id="updateRedbag" parameterType="com.bklkj.pojo.User">
		update `user` set
		UserBalance=(select SUM(redbagmoney) from redbag) where userid =
		#{userid,jdbcType=VARCHAR}
	</update>

	<update id="updateMaxIn" parameterType="com.bklkj.pojo.User">
		update `user` set
		UserIntegral=userIntegral + 20 where userid =
		#{userid,jdbcType=VARCHAR}
	</update>
	<update id="updateMinin" parameterType="com.bklkj.pojo.User">
		update `user` set
		UserIntegral=userIntegral + 1 where userid =
		#{userid,jdbcType=VARCHAR}
	</update>

	<!-- 我的界面 -->
	<select id="selectUserBalance" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select userbalance from user where
		userid=#{userid,jdbcType=VARCHAR}
	</select>
	<!-- 头像 -->
	<select id="selectUserPicture" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select userpicture from user where
		userid=#{userid,jdbcType=VARCHAR}
	</select>

	<update id="updatewith" parameterType="com.bklkj.pojo.User">
		update `user` set
		userwithdrawalsmoney=(select sum(withdrawalsmoney) from withdrawals
		where userid=#{userid,jdbcType=VARCHAR}) where userid =
		#{userid,jdbcType=VARCHAR}
	</update>

	<select id="selectUserWithdrawals" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select userwithdrawalsmoney from user where
		userid=#{userid,jdbcType=VARCHAR}
	</select>

	<select id="selectUserPi" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select userid from user where
		userPhone=#{userphone,jdbcType=VARCHAR}
	</select>
	<!-- 添加用户昵称 -->
	<update id="updateUserNickname" parameterType="com.bklkj.pojo.User">
		update user set
		UserNickname=(select * from (select CONCAT((select left(userphone,3)
		as abstract from user where
		userPhone=#{userphone,jdbcType=VARCHAR}),'xxxx',(select
		RIGHT(userphone,4)as abstract from user where
		userPhone=#{userphone,jdbcType=VARCHAR})))nn) where
		userPhone=#{userphone,jdbcType=VARCHAR}
	</update>

	<update id="updatenickname" parameterType="com.bklkj.pojo.User">
		update user set
		UserNickname = #{usernickname,jdbcType=VARCHAR} where
		userid=#{userid,jdbcType=VARCHAR}
	</update>

	<select id="selectusernickname" resultMap="BaseResultMap">
		select usernickname from user where
		userid=#{userid,jdbcType=VARCHAR}
	</select>
	
	<select id="selectnickname" resultType="java.lang.String">
		select usernickname from user where
		userid=#{userid,jdbcType=VARCHAR}
	</select>





	<!-- 查询总金额并且排序 -->
	<select id="selectByTotalMoney" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select `user`.UserName,totalMoney from user,(select UserId , sum(totalMoney)
		totalMoney from usertoredbag group by UserId) s where `user`.UserId =
		s.UserId ORDER BY s.totalMoney DESC limit 0,30;
	</select>
	<!-- 查询人品金额排序 -->
	<select id="selectByMaxMoney" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		<!-- select (@rownum:=@rownum+1) AS rownum,r.usernickname,r.maxmoney from (select
		@rownum:=0)t,(select `user`.UserNickname,maxmoney from user,(select
		userid,MAX(RedbagMoney)maxmoney from redbag GROUP BY userid)m where
		m.userid=`user`.UserId ORDER BY maxmoney DESC)r limit 20 -->
		select usernickname,(@rownum:=@rownum+1)AS rownum,ss.money from (select userid,max(money) money from (select max(money)money,userid from activityget GROUP BY userid UNION
select max(redbagmoney)money,userid from redbag GROUP BY userid)mm GROUP BY userid)ss,user,(select @rownum:=0)t  where user.userid=ss.userid ORDER BY ss.money DESC limit 20
	</select>

	<!-- 查询红包数量 -->
	<select id="selectCount" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		SELECT * FROM usertoredbag where userid=#{userid,jdbcType=VARCHAR} and
		DATE_FORMAT( MoneyTime, "%Y-%m-%d" ) = DATE_FORMAT( NOW(), "%Y-%m-%d"
		);
	</select>
	<!-- 查看最后得到的红包时间 -->
	<select id="selectTime" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select s.moneytime from (select * from usertoredbag where UserId =
		#{userid,jdbcType=VARCHAR} ORDER BY MoneyTime DESC)s LIMIT 1
	</select>


	<!-- 查看最后得到的红包时间 -->
	<select id="selectByLastR" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select u.businessid from (SELECT * from usertoredbag where
		UserId=#{userid,jdbcType=VARCHAR} GROUP BY MoneyTime DESC)u limit 1 ;
	</select>

	<select id="selectUserIdJudge" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select judge from usertoredbag where userid=#{userid,jdbcType=VARCHAR}
	</select>

	<select id="selectrow" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select DISTINCT rownum from user where
		userid=#{userid,jdbcType=VARCHAR};
	</select>

	<update id="updateMaxmoney" parameterType="map">
		update user,(SELECT MAX(money) max from usertoredbag where
		userid=#{userid,jdbcType=VARCHAR})m SET user.MaxMoney = m.max where
		userid=#{userid,jdbcType=VARCHAR}
	</update>
	<update id="updaterow" parameterType="map">
		update redbag,(select (@rownum:=@rownum+1) AS
		rownum,`user`.UserNickname,`user`.maxmoney,`user`.UserId from
		user,(select @rownum:=0)t GROUP BY `user`.userid) r SET redbag.rownum
		= r.rownum where redbag.userid=r.UserId;
	</update>

	<update id="updateTotalmoney" parameterType="map">
		update usertoredbag,(select userid,SUM(money)s from usertoredbag GROUP BY
		userid)t SET usertoredbag.TotalMoney=t.s where
		usertoredbag.UserId=t.userid;
	</update>
	<update id="updaterownum" parameterType="map">
		update user,(select (@rownum:=@rownum+1) AS rownum,userid,SUM(money) from
		usertoredbag,(select @rownum:=0)a GROUP BY userid)t SET
		user.totalrownum=t.rownum where user.UserId=t.userid;
	</update>

	<select id="selectrownum" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select DISTINCT totalrownum from user where
		userid=#{userid,jdbcType=VARCHAR};
	</select>

	<update id="changesecurity" parameterType="map">
		update user set security=1 where userid=#{userid,jdbcType=VARCHAR}
	</update>

	<select id="selectSecurity" resultType="java.lang.String"
		parameterType="java.lang.String">
		select security from user where userid=#{userid,jdbcType=VARCHAR};
	</select>

	<update id="changesecurityOff" parameterType="map">
		update user set security=#{security,jdbcType=VARCHAR} where
		userid=#{userid,jdbcType=VARCHAR}
	</update>

	<update id="changesecurityOn" parameterType="map">
		update user set security=#{security,jdbcType=VARCHAR} where
		userid=#{userid,jdbcType=VARCHAR}
	</update>

	<select id="selectOthernickname" resultType="java.lang.Integer">
		select COUNT(*) from user where
		UserNickname=#{usernickname,jdbcType=VARCHAR}
	</select>
	
	<!-- 活动的收入记录的查询 -->
	<select id="selectactivityget" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select DISTINCT s.Money,s.moneytime,businessname,logo from business,activityget,(SELECT money,moneytime,businessid from activityget where userid=#{userid,jdbcType=VARCHAR})s where userid=#{userid,jdbcType=VARCHAR} and business.BusinessId=s.businessid;
	</select>
	
	<!-- 收入记录总查询 -->
	<select id="selectredbagrecord" resultType="java.lang.String" >
		select ss.RedbagMoney from (select DISTINCT s.RedbagMoney,s.RedBagTime,businessname,logo from business,redbag,(select RedbagMoney,RedBagTime,businessid from redbag where userid=#{userid,jdbcType=VARCHAR})s where userid=#{userid,jdbcType=VARCHAR} and business.BusinessId=s.businessid union
select DISTINCT s.Money as redbagmoney,s.moneytime as redbagtime,businessname,logo from business,activityget,(SELECT money,moneytime,businessid from activityget where userid=#{userid,jdbcType=VARCHAR})s where business.BusinessId=s.businessid 
)ss ORDER BY redbagtime desc	
</select>
	
	<select id="selectime" resultType="java.lang.String"  >
	select DATE_FORMAT(ss.RedBagTime, "%Y-%m-%d %k:%i:%s") from (select DISTINCT s.RedbagMoney,s.RedBagTime,businessname,logo from business,redbag,(select RedbagMoney,RedBagTime,businessid from redbag where userid=#{userid,jdbcType=VARCHAR})s where userid=#{userid,jdbcType=VARCHAR} and business.BusinessId=s.businessid union
select DISTINCT s.Money as redbagmoney,s.moneytime as redbagtime,businessname,logo from business,activityget,(SELECT money,moneytime,businessid from activityget where userid=#{userid,jdbcType=VARCHAR})s where business.BusinessId=s.businessid 
)ss ORDER BY redbagtime desc
	</select>
	
	<select id="selectnames" resultType="java.lang.String" >
	select ss.businessname from (select DISTINCT s.RedbagMoney,s.RedBagTime,businessname,logo from business,redbag,(select RedbagMoney,RedBagTime,businessid from redbag where userid=#{userid,jdbcType=VARCHAR})s where userid=#{userid,jdbcType=VARCHAR} and business.BusinessId=s.businessid union
select DISTINCT s.Money as redbagmoney,s.moneytime as redbagtime,businessname,logo from business,activityget,(SELECT money,moneytime,businessid from activityget where userid=#{userid,jdbcType=VARCHAR})s where business.BusinessId=s.businessid 
)ss ORDER BY redbagtime desc
	</select>
	
	<select id="selectlogo" resultType="java.lang.String"  >
		select ss.logo from (select DISTINCT s.RedbagMoney,s.RedBagTime,businessname,logo from business,redbag,(select RedbagMoney,RedBagTime,businessid from redbag where userid=#{userid,jdbcType=VARCHAR})s where userid=#{userid,jdbcType=VARCHAR} and business.BusinessId=s.businessid union
select DISTINCT s.Money as redbagmoney,s.moneytime as redbagtime,businessname,logo from business,activityget,(SELECT money,moneytime,businessid from activityget where userid=#{userid,jdbcType=VARCHAR})s where business.BusinessId=s.businessid 
)ss ORDER BY redbagtime desc
	</select>
	
	<select id="selectredbagrecordmoney" resultType="java.lang.String"  >
		select ss.RedbagMoney from (select DISTINCT s.RedbagMoney,s.RedBagTime,businessname,logo from business,redbag,(select RedbagMoney,RedBagTime,businessid from redbag where userid=#{userid,jdbcType=VARCHAR})s where userid=#{userid,jdbcType=VARCHAR} and business.BusinessId=s.businessid union
select DISTINCT s.Money as redbagmoney,s.moneytime as redbagtime,businessname,logo from business,activityget,(SELECT money,moneytime,businessid from activityget where userid=#{userid,jdbcType=VARCHAR})s where business.BusinessId=s.businessid 
)ss where ss.redbagmoney between #{redbagmoneymin,jdbcType=DOUBLE} and #{redbagmoneymax,jdbcType=DOUBLE} ORDER BY redbagtime desc
	</select>
	<select id="selectnamesmoney" resultType="java.lang.String"  >
		select ss.businessName from (select DISTINCT s.RedbagMoney,s.RedBagTime,businessname,logo from business,redbag,(select RedbagMoney,RedBagTime,businessid from redbag where userid=#{userid,jdbcType=VARCHAR})s where userid=#{userid,jdbcType=VARCHAR} and business.BusinessId=s.businessid union
select DISTINCT s.Money as redbagmoney,s.moneytime as redbagtime,businessname,logo from business,activityget,(SELECT money,moneytime,businessid from activityget where userid=#{userid,jdbcType=VARCHAR})s where business.BusinessId=s.businessid 
)ss where ss.RedbagMoney BETWEEN #{redbagmoneymin,jdbcType=DOUBLE} and #{redbagmoneymax,jdbcType=DOUBLE} ORDER BY redbagtime desc 
	</select>
	<select id="selectimemoney" resultType="java.lang.String"  >
select DATE_FORMAT(ss.redbagtime, "%Y-%m-%d %k:%i:%s") from (select DISTINCT s.RedbagMoney,s.RedBagTime,businessname,logo from business,redbag,(select RedbagMoney,RedBagTime,businessid from redbag where userid=#{userid,jdbcType=VARCHAR})s where userid=#{userid,jdbcType=VARCHAR} and business.BusinessId=s.businessid union
select DISTINCT s.Money as redbagmoney,s.moneytime as redbagtime,businessname,logo from business,activityget,(SELECT money,moneytime,businessid from activityget where userid=#{userid,jdbcType=VARCHAR})s where business.BusinessId=s.businessid 
)ss where ss.RedbagMoney BETWEEN #{redbagmoneymin,jdbcType=DOUBLE} and #{redbagmoneymax,jdbcType=DOUBLE} ORDER BY redbagtime desc	</select>
	<select id="selectlogomoney" resultType="java.lang.String"  >
		select ss.logo from (select DISTINCT s.RedbagMoney,s.RedBagTime,businessname,logo from business,redbag,(select RedbagMoney,RedBagTime,businessid from redbag where userid=#{userid,jdbcType=VARCHAR})s where userid=#{userid,jdbcType=VARCHAR} and business.BusinessId=s.businessid union
select DISTINCT s.Money as redbagmoney,s.moneytime as redbagtime,businessname,logo from business,activityget,(SELECT money,moneytime,businessid from activityget where userid=#{userid,jdbcType=VARCHAR})s where business.BusinessId=s.businessid 
)ss where ss.RedbagMoney BETWEEN #{redbagmoneymin,jdbcType=DOUBLE} and #{redbagmoneymax,jdbcType=DOUBLE} ORDER BY redbagtime desc 
	</select>
	
	<select id="selectAll" resultType="java.lang.String"  >
<!-- 		select usernickname,redbagmoney from redbag,user where user.userid=redbag.userid
 -->
 	select UserNickname from (select usernickname,redbagmoney from redbag,user where user.userid=redbag.userid)e
 	</select>
	
		<select id="selectuseralipayid" parameterType="com.bklkj.pojo.User" resultMap="BaseResultMap">
		<!-- select usernickname,redbagmoney from redbag,user where user.userid=redbag.userid -->
		select * from user where userid=#{userid,jdbcType=VARCHAR}
	</select>
	
	<update id="updatequestion1" parameterType="map">
		update user set questionone = 1 where
		userid=#{userid,jdbcType=VARCHAR}
	</update>
	<update id="updatequestion2" parameterType="map">
		update user set questiontwo = 1 where
		userid=#{userid,jdbcType=VARCHAR}
	</update>
	<update id="updatequestion3" parameterType="map">
		update user set questionthree = 1 where
		userid=#{userid,jdbcType=VARCHAR}
	</update>
	
	<update id="updateuserphone" parameterType="com.bklkj.pojo.User">
		update user set userphone = #{userphone,jdbcType=VARCHAR} where
		userid=#{userid,jdbcType=VARCHAR}
	</update>
	
	<update id="updateuserpassword" parameterType="map">
		update user set userpassword = #{userpassword,jdbcType=VARCHAR} where
		userphone = #{userphone,jdbcType=VARCHAR} 
	</update>
	
	<update id="updatepicture" parameterType="map">
		update user set userpicture = CONCAT('upload/',#{all,jdbcType=VARCHAR}) where
		userid=#{userid,jdbcType=VARCHAR}
	</update>
	
	<insert id="insertUser" parameterType="java.lang.String">
		insert into user
		(userid,usernickname,userpicture,loginway) values
		(#{userid,jdbcType=VARCHAR},#{usernickname,jdbcType=VARCHAR},
		#{userpicture,jdbcType=VARCHAR},2)
	</insert>
	
	
	
	<select id="updatemoney" parameterType="map" >
update user set userbalance =((select IFNULL(SUM(redbagmoney),0.00)AS money from redbag where userid=#{userid,jdbcType=VARCHAR})+(select IFNULL(SUM(money),0.00)AS money from activityget where userid=#{userid,jdbcType=VARCHAR})-(select IFNULL(SUM(withdrawalsmoney),0.00)AS money from withdrawals where userid=#{userid,jdbcType=VARCHAR})) where userid=#{userid,jdbcType=VARCHAR}
	</select>
	
	<update id="updateuserid" parameterType="map">
		update user set userid = CONCAT((select DATE_FORMAT( NOW(), "%Y%m%d%k%i%s")),userphone) where userphone=#{userphone,jdbcType=VARCHAR}
	</update>
	
</mapper>